taskKey="com.javarush.task.task30.task3008.big15"\n\nЧат (15)

Напишем реализацию класса SocketThread. Начнем с простых вспомогательных методов.

Добавь методы, которые будут доступны классам потомкам и не доступны остальным
классам вне пакета:
1)	void processIncomingMessage(String message) – должен выводить текст message в
консоль.
2)	void informAboutAddingNewUser(String userName) – должен выводить в консоль
информацию о том, что участник с именем userName присоединился к чату.
3)	void informAboutDeletingNewUser(String userName) – должен выводить в
консоль, что участник с именем userName покинул чат.
4)	void notifyConnectionStatusChanged(boolean clientConnected) – этот метод
должен:
а)	Устанавливать значение поля clientConnected внешнего объекта Client в соответствии с
переданным параметром.
б)	Оповещать (пробуждать ожидающий) основной поток класса Client. Подсказка:
используй синхронизацию на уровне текущего объекта внешнего класса и метод notify(). Для
класса SocketThread внешним классом является класс Client.


Требования:
1.	Метод processIncomingMessage() должен выводить на экран сообщение полученное в качестве параметра.
2.	Метод informAboutAddingNewUser() должен выводить на экран сообщение о том что пользователь подключился к чату.
3.	Метод informAboutDeletingNewUser() должен выводить на экран сообщение о том что пользователь покинул чат.
4.	Метод notifyConnectionStatusChanged() должен устанавливать значение поля clientConnected внешнего объекта Client равным полученному параметру.
5.	Метод notifyConnectionStatusChanged() должен вызвать метод notify() на внешнем объекте Client.


Чат (15)

Напишем реализацию класса SocketThread. Начнем с простых вспомогательных методов.

Добавь методы, которые будут доступны классам потомкам и не доступны остальным
классам вне пакета:
1)	void processIncomingMessage(String message) – должен выводить текст message в
консоль.
2)	void informAboutAddingNewUser(String userName) – должен выводить в консоль
информацию о том, что участник с именем userName присоединился к чату.
3)	void informAboutDeletingNewUser(String userName) – должен выводить в
консоль, что участник с именем userName покинул чат.
4)	void notifyConnectionStatusChanged(boolean clientConnected) – этот метод
должен:
а)	Устанавливать значение поля clientConnected внешнего объекта Client в соответствии с
переданным параметром.
б)	Оповещать (пробуждать ожидающий) основной поток класса Client. Подсказка:
используй синхронизацию на уровне текущего объекта внешнего класса и метод notify(). Для
класса SocketThread внешним классом является класс Client.



Чат (15)

Напишем реализацию класса SocketThread. Начнем с простых вспомогательных методов.

Добавь методы, которые будут доступны классам потомкам и не доступны остальным
классам вне пакета:
1)	void processIncomingMessage(String message) – должен выводить текст message в
консоль.
2)	void informAboutAddingNewUser(String userName) – должен выводить в консоль
информацию о том, что участник с именем userName присоединился к чату.
3)	void informAboutDeletingNewUser(String userName) – должен выводить в
консоль, что участник с именем userName покинул чат.
4)	void notifyConnectionStatusChanged(boolean clientConnected) – этот метод
должен:
а)	Устанавливать значение поля clientConnected внешнего объекта Client в соответствии с
переданным параметром.
б)	Оповещать (пробуждать ожидающий) основной поток класса Client. Подсказка:
используй синхронизацию на уровне текущего объекта внешнего класса и метод notify(). Для
класса SocketThread внешним классом является класс Client.



Чат (15)

Напишем реализацию класса SocketThread. Начнем с простых вспомогательных методов.

Добавь методы, которые будут доступны классам потомкам и не доступны остальным
классам вне пакета:
1)	void processIncomingMessage(String message) – должен выводить текст message в
консоль.
2)	void informAboutAddingNewUser(String userName) – должен выводить в консоль
информацию о том, что участник с именем userName присоединился к чату.
3)	void informAboutDeletingNewUser(String userName) – должен выводить в
консоль, что участник с именем userName покинул чат.
4)	void notifyConnectionStatusChanged(boolean clientConnected) – этот метод
должен:
а)	Устанавливать значение поля clientConnected внешнего объекта Client в соответствии с
переданным параметром.
б)	Оповещать (пробуждать ожидающий) основной поток класса Client. Подсказка:
используй синхронизацию на уровне текущего объекта внешнего класса и метод notify(). Для
класса SocketThread внешним классом является класс Client.



Чат (15)

Напишем реализацию класса SocketThread. Начнем с простых вспомогательных методов.

Добавь методы, которые будут доступны классам потомкам и не доступны остальным
классам вне пакета:
1)	void processIncomingMessage(String message) – должен выводить текст message в
консоль.
2)	void informAboutAddingNewUser(String userName) – должен выводить в консоль
информацию о том, что участник с именем userName присоединился к чату.
3)	void informAboutDeletingNewUser(String userName) – должен выводить в
консоль, что участник с именем userName покинул чат.
4)	void notifyConnectionStatusChanged(boolean clientConnected) – этот метод
должен:
а)	Устанавливать значение поля clientConnected внешнего объекта Client в соответствии с
переданным параметром.
б)	Оповещать (пробуждать ожидающий) основной поток класса Client. Подсказка:
используй синхронизацию на уровне текущего объекта внешнего класса и метод notify(). Для
класса SocketThread внешним классом является класс Client.



Чат (15)

Напишем реализацию класса SocketThread. Начнем с простых вспомогательных методов.

Добавь методы, которые будут доступны классам потомкам и не доступны остальным
классам вне пакета:
1)	void processIncomingMessage(String message) – должен выводить текст message в
консоль.
2)	void informAboutAddingNewUser(String userName) – должен выводить в консоль
информацию о том, что участник с именем userName присоединился к чату.
3)	void informAboutDeletingNewUser(String userName) – должен выводить в
консоль, что участник с именем userName покинул чат.
4)	void notifyConnectionStatusChanged(boolean clientConnected) – этот метод
должен:
а)	Устанавливать значение поля clientConnected внешнего объекта Client в соответствии с
переданным параметром.
б)	Оповещать (пробуждать ожидающий) основной поток класса Client. Подсказка:
используй синхронизацию на уровне текущего объекта внешнего класса и метод notify(). Для
класса SocketThread внешним классом является класс Client.



