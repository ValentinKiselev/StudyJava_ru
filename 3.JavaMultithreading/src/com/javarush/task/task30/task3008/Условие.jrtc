taskKey="com.javarush.task.task30.task3008.big10"\n\nЧат (10)

Этап третий – главный цикл обработки сообщений сервером.
Добавь приватный метод void serverMainLoop(Connection connection, String userName) throws
IOException, ClassNotFoundException, где значение параметров такое же, как и у метода
notifyUsers().

Он должен:
1) Принимать сообщение клиента
2) Если принятое сообщение – это текст (тип TEXT), то формировать новое
текстовое сообщение путем конкатенации: имени клиента, двоеточия, пробела и
текста сообщения. Например, если мы получили сообщение с текстом "привет чат" от
пользователя "Боб", то нужно сформировать сообщение "Боб: привет чат".
3) Отправлять сформированное сообщение всем клиентам с помощью метода
sendBroadcastMessage().
4) Если принятое сообщение не является текстом, вывести сообщение об ошибке
5) Организовать бесконечный цикл, внутрь которого перенести функционал
пунктов 10.1-10.4.


Требования:
1.	В классе Handler должен быть создан метод private void serverMainLoop(Connection connection, String userName).
2.	Метод serverMainLoop() должен в бесконечном цикле получать сообщения от клиента (используя метод receive() класса Connection).
3.	Если сообщение, полученное методом serverMainLoop(), имеет тип MessageType.TEXT, то должно быть отправлено новое сообщение всем участникам чата используя метод sendBroadcastMessage() (форматирование сообщения описано в условии).
4.	Если сообщение, полученное методом serverMainLoop(), имеет тип отличный от MessageType.TEXT, метод sendBroadcastMessage() не должен быть вызван, и должно быть выведено сообщение об ошибке.


Чат (10)

Этап третий – главный цикл обработки сообщений сервером.
Добавь приватный метод void serverMainLoop(Connection connection, String userName) throws
IOException, ClassNotFoundException, где значение параметров такое же, как и у метода
notifyUsers().

Он должен:
1) Принимать сообщение клиента
2) Если принятое сообщение – это текст (тип TEXT), то формировать новое
текстовое сообщение путем конкатенации: имени клиента, двоеточия, пробела и
текста сообщения. Например, если мы получили сообщение с текстом "привет чат" от
пользователя "Боб", то нужно сформировать сообщение "Боб: привет чат".
3) Отправлять сформированное сообщение всем клиентам с помощью метода
sendBroadcastMessage().
4) Если принятое сообщение не является текстом, вывести сообщение об ошибке
5) Организовать бесконечный цикл, внутрь которого перенести функционал
пунктов 10.1-10.4.



Чат (10)

Этап третий – главный цикл обработки сообщений сервером.
Добавь приватный метод void serverMainLoop(Connection connection, String userName) throws
IOException, ClassNotFoundException, где значение параметров такое же, как и у метода
notifyUsers().

Он должен:
1) Принимать сообщение клиента
2) Если принятое сообщение – это текст (тип TEXT), то формировать новое
текстовое сообщение путем конкатенации: имени клиента, двоеточия, пробела и
текста сообщения. Например, если мы получили сообщение с текстом "привет чат" от
пользователя "Боб", то нужно сформировать сообщение "Боб: привет чат".
3) Отправлять сформированное сообщение всем клиентам с помощью метода
sendBroadcastMessage().
4) Если принятое сообщение не является текстом, вывести сообщение об ошибке
5) Организовать бесконечный цикл, внутрь которого перенести функционал
пунктов 10.1-10.4.



Чат (10)

Этап третий – главный цикл обработки сообщений сервером.
Добавь приватный метод void serverMainLoop(Connection connection, String userName) throws
IOException, ClassNotFoundException, где значение параметров такое же, как и у метода
notifyUsers().

Он должен:
1) Принимать сообщение клиента
2) Если принятое сообщение – это текст (тип TEXT), то формировать новое
текстовое сообщение путем конкатенации: имени клиента, двоеточия, пробела и
текста сообщения. Например, если мы получили сообщение с текстом "привет чат" от
пользователя "Боб", то нужно сформировать сообщение "Боб: привет чат".
3) Отправлять сформированное сообщение всем клиентам с помощью метода
sendBroadcastMessage().
4) Если принятое сообщение не является текстом, вывести сообщение об ошибке
5) Организовать бесконечный цикл, внутрь которого перенести функционал
пунктов 10.1-10.4.



Чат (10)

Этап третий – главный цикл обработки сообщений сервером.
Добавь приватный метод void serverMainLoop(Connection connection, String userName) throws
IOException, ClassNotFoundException, где значение параметров такое же, как и у метода
notifyUsers().

Он должен:
1) Принимать сообщение клиента
2) Если принятое сообщение – это текст (тип TEXT), то формировать новое
текстовое сообщение путем конкатенации: имени клиента, двоеточия, пробела и
текста сообщения. Например, если мы получили сообщение с текстом "привет чат" от
пользователя "Боб", то нужно сформировать сообщение "Боб: привет чат".
3) Отправлять сформированное сообщение всем клиентам с помощью метода
sendBroadcastMessage().
4) Если принятое сообщение не является текстом, вывести сообщение об ошибке
5) Организовать бесконечный цикл, внутрь которого перенести функционал
пунктов 10.1-10.4.



Чат (10)

Этап третий – главный цикл обработки сообщений сервером.
Добавь приватный метод void serverMainLoop(Connection connection, String userName) throws
IOException, ClassNotFoundException, где значение параметров такое же, как и у метода
notifyUsers().

Он должен:
1) Принимать сообщение клиента
2) Если принятое сообщение – это текст (тип TEXT), то формировать новое
текстовое сообщение путем конкатенации: имени клиента, двоеточия, пробела и
текста сообщения. Например, если мы получили сообщение с текстом "привет чат" от
пользователя "Боб", то нужно сформировать сообщение "Боб: привет чат".
3) Отправлять сформированное сообщение всем клиентам с помощью метода
sendBroadcastMessage().
4) Если принятое сообщение не является текстом, вывести сообщение об ошибке
5) Организовать бесконечный цикл, внутрь которого перенести функционал
пунктов 10.1-10.4.



